{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/alessioricci/projects/udemy/udemy-app/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnyFilesInterceptor = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst common_1 = require(\"@nestjs/common\");\n\nconst multer = require(\"multer\");\n\nconst files_constants_1 = require(\"../files.constants\");\n\nconst multer_utils_1 = require(\"../multer/multer.utils\");\n\nfunction AnyFilesInterceptor(localOptions) {\n  let MixinInterceptor = class MixinInterceptor {\n    constructor(options = {}) {\n      this.multer = multer(Object.assign(Object.assign({}, options), localOptions));\n    }\n\n    intercept(context, next) {\n      var _this = this;\n\n      return _asyncToGenerator(function* () {\n        const ctx = context.switchToHttp();\n        yield new Promise((resolve, reject) => _this.multer.any()(ctx.getRequest(), ctx.getResponse(), err => {\n          if (err) {\n            const error = multer_utils_1.transformException(err);\n            return reject(error);\n          }\n\n          resolve();\n        }));\n        return next.handle();\n      })();\n    }\n\n  };\n  MixinInterceptor = tslib_1.__decorate([tslib_1.__param(0, common_1.Optional()), tslib_1.__param(0, common_1.Inject(files_constants_1.MULTER_MODULE_OPTIONS)), tslib_1.__metadata(\"design:paramtypes\", [Object])], MixinInterceptor);\n  const Interceptor = common_1.mixin(MixinInterceptor);\n  return Interceptor;\n}\n\nexports.AnyFilesInterceptor = AnyFilesInterceptor;","map":null,"metadata":{},"sourceType":"script"}