{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContextIdFactory = exports.createContextId = void 0;\n\nconst request_constants_1 = require(\"../router/request/request-constants\");\n\nfunction createContextId() {\n  /**\n   * We are generating random identifier to track asynchronous\n   * execution context. An identifier does not have to be neither unique\n   * nor unpredictable because WeakMap uses objects as keys (reference comparison).\n   * Thus, even though identifier number might be equal, WeakMap would properly\n   * associate asynchronous context with its internal map values using object reference.\n   * Object is automatically removed once request has been processed (closure).\n   */\n  return {\n    id: Math.random()\n  };\n}\n\nexports.createContextId = createContextId;\n\nclass ContextIdFactory {\n  /**\n   * Generates a context identifier based on the request object.\n   */\n  static create() {\n    return createContextId();\n  }\n  /**\n   * Generates a random identifier to track asynchronous execution context.\n   * @param request request object\n   */\n\n\n  static getByRequest(request) {\n    if (!request) {\n      return createContextId();\n    }\n\n    if (request[request_constants_1.REQUEST_CONTEXT_ID]) {\n      return request[request_constants_1.REQUEST_CONTEXT_ID];\n    }\n\n    if (request.raw && request.raw[request_constants_1.REQUEST_CONTEXT_ID]) {\n      return request.raw[request_constants_1.REQUEST_CONTEXT_ID];\n    }\n\n    return createContextId();\n  }\n\n}\n\nexports.ContextIdFactory = ContextIdFactory;","map":null,"metadata":{},"sourceType":"script"}