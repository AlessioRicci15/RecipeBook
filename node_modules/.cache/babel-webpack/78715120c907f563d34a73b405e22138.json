{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar MetadataStorage_1 = require(\"./metadata/MetadataStorage\");\n\nvar ConstraintMetadata_1 = require(\"./metadata/ConstraintMetadata\");\n\nvar ValidationMetadata_1 = require(\"./metadata/ValidationMetadata\");\n\nvar ValidationTypes_1 = require(\"./validation/ValidationTypes\");\n\nvar container_1 = require(\"./container\");\n/**\n * Registers a custom validation decorator.\n */\n\n\nfunction registerDecorator(options) {\n  var constraintCls;\n\n  if (options.validator instanceof Function) {\n    constraintCls = options.validator;\n  } else {\n    var validator_1 = options.validator;\n\n    constraintCls = function () {\n      function CustomConstraint() {}\n\n      CustomConstraint.prototype.validate = function (value, validationArguments) {\n        return validator_1.validate(value, validationArguments);\n      };\n\n      CustomConstraint.prototype.defaultMessage = function (validationArguments) {\n        if (validator_1.defaultMessage) {\n          return validator_1.defaultMessage(validationArguments);\n        }\n\n        return \"\";\n      };\n\n      return CustomConstraint;\n    }();\n\n    container_1.getFromContainer(MetadataStorage_1.MetadataStorage).addConstraintMetadata(new ConstraintMetadata_1.ConstraintMetadata(constraintCls, options.name, options.async));\n  }\n\n  var validationMetadataArgs = {\n    type: ValidationTypes_1.ValidationTypes.CUSTOM_VALIDATION,\n    target: options.target,\n    propertyName: options.propertyName,\n    validationOptions: options.options,\n    constraintCls: constraintCls,\n    constraints: options.constraints\n  };\n  container_1.getFromContainer(MetadataStorage_1.MetadataStorage).addValidationMetadata(new ValidationMetadata_1.ValidationMetadata(validationMetadataArgs));\n}\n\nexports.registerDecorator = registerDecorator; //# sourceMappingURL=register-decorator.js.map","map":null,"metadata":{},"sourceType":"script"}