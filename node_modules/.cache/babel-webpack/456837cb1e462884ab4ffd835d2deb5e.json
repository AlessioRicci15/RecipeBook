{"ast":null,"code":"import * as ShoppingListAction from './shopping-list.actions';\nconst initialState = {\n  ingredients: [],\n  editedIngredient: null,\n  editedIngredientIndex: -1\n};\nexport function shoppingListReducer(state = initialState, action) {\n  switch (action.type) {\n    case ShoppingListAction.ADD_INGREDIENT:\n      return Object.assign(Object.assign({}, state), {\n        ingredients: [...state.ingredients, action.payload]\n      });\n\n    case ShoppingListAction.ADD_INGREDIENTS:\n      return Object.assign(Object.assign({}, state), {\n        ingredients: [...state.ingredients, ...action.payload]\n      });\n\n    case ShoppingListAction.UPDATE_INGREDIENT:\n      const updateIngredients = [...state.ingredients];\n      updateIngredients[state.editedIngredientIndex] = action.payload;\n      return Object.assign(Object.assign({}, state), {\n        ingredients: updateIngredients,\n        editedIngredient: null,\n        editedIngredientIndex: -1\n      });\n\n    case ShoppingListAction.DELETE_INGREDIENT:\n      return Object.assign(Object.assign({}, state), {\n        ingredients: state.ingredients.filter((ingredient, index) => {\n          return index !== state.editedIngredientIndex;\n        }),\n        editedIngredient: null,\n        editedIngredientIndex: -1\n      });\n\n    case ShoppingListAction.START_EDIT:\n      return Object.assign(Object.assign({}, state), {\n        editedIngredient: Object.assign({}, state.ingredients[action.payload]),\n        editedIngredientIndex: action.payload\n      });\n\n    case ShoppingListAction.STOP_EDIT:\n      return Object.assign(Object.assign({}, state), {\n        editedIngredient: null,\n        editedIngredientIndex: -1\n      });\n\n    default:\n      return state;\n  }\n}","map":null,"metadata":{},"sourceType":"module"}