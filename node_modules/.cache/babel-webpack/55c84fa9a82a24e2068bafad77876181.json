{"ast":null,"code":"import { map, tap } from 'rxjs/operators';\nimport * as RecipeActions from './store/recipe.actions';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./recipe.service\";\nimport * as i3 from \"@ngrx/store\";\nexport let DataStorageService = /*#__PURE__*/(() => {\n  class DataStorageService {\n    constructor(http, recipeService, store) {\n      this.http = http;\n      this.recipeService = recipeService;\n      this.store = store;\n    }\n\n    storeRecipes() {\n      const recipes = this.recipeService.getRecipes();\n\n      if (recipes.length !== 0) {\n        this.http.put('https://udemy-134ff-default-rtdb.europe-west1.firebasedatabase.app/recipes.json', recipes).subscribe(response => {});\n        return;\n      }\n\n      return;\n    }\n\n    fetchRecipes() {\n      return this.http.get('https://udemy-134ff-default-rtdb.europe-west1.firebasedatabase.app/recipes.json').pipe(map(recipes => {\n        return recipes.map(recipe => {\n          return Object.assign(Object.assign({}, recipe), {\n            ingredients: recipe.ingredients ? recipe.ingredients : []\n          });\n        });\n      }), tap(recipes => {\n        this.store.dispatch(new RecipeActions.SetRecipes(recipes));\n      }));\n    }\n\n  }\n\n  DataStorageService.ɵfac = function DataStorageService_Factory(t) {\n    return new (t || DataStorageService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.RecipeService), i0.ɵɵinject(i3.Store));\n  };\n\n  DataStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataStorageService,\n    factory: DataStorageService.ɵfac,\n    providedIn: 'root'\n  });\n  return DataStorageService;\n})();","map":null,"metadata":{},"sourceType":"module"}