{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/alessioricci/projects/udemy/udemy-app/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nvar HttpModule_1;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpModule = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst axios_1 = require(\"axios\");\n\nconst module_decorator_1 = require(\"../decorators/modules/module.decorator\");\n\nconst random_string_generator_util_1 = require(\"../utils/random-string-generator.util\");\n\nconst http_constants_1 = require(\"./http.constants\");\n\nconst http_service_1 = require(\"./http.service\");\n\nlet HttpModule = HttpModule_1 = class HttpModule {\n  static register(config) {\n    return {\n      module: HttpModule_1,\n      providers: [{\n        provide: http_constants_1.AXIOS_INSTANCE_TOKEN,\n        useValue: axios_1.default.create(config)\n      }, {\n        provide: http_constants_1.HTTP_MODULE_ID,\n        useValue: random_string_generator_util_1.randomStringGenerator()\n      }]\n    };\n  }\n\n  static registerAsync(options) {\n    return {\n      module: HttpModule_1,\n      imports: options.imports,\n      providers: [...this.createAsyncProviders(options), {\n        provide: http_constants_1.AXIOS_INSTANCE_TOKEN,\n        useFactory: config => axios_1.default.create(config),\n        inject: [http_constants_1.HTTP_MODULE_OPTIONS]\n      }, {\n        provide: http_constants_1.HTTP_MODULE_ID,\n        useValue: random_string_generator_util_1.randomStringGenerator()\n      }, ...(options.extraProviders || [])]\n    };\n  }\n\n  static createAsyncProviders(options) {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [this.createAsyncOptionsProvider(options), {\n      provide: options.useClass,\n      useClass: options.useClass\n    }];\n  }\n\n  static createAsyncOptionsProvider(options) {\n    if (options.useFactory) {\n      return {\n        provide: http_constants_1.HTTP_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: http_constants_1.HTTP_MODULE_OPTIONS,\n      useFactory: function () {\n        var _ref = _asyncToGenerator(function* (optionsFactory) {\n          return optionsFactory.createHttpOptions();\n        });\n\n        return function useFactory(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      inject: [options.useExisting || options.useClass]\n    };\n  }\n\n};\nHttpModule = HttpModule_1 = tslib_1.__decorate([module_decorator_1.Module({\n  providers: [http_service_1.HttpService, {\n    provide: http_constants_1.AXIOS_INSTANCE_TOKEN,\n    useValue: axios_1.default\n  }],\n  exports: [http_service_1.HttpService]\n})], HttpModule);\nexports.HttpModule = HttpModule;","map":null,"metadata":{},"sourceType":"script"}