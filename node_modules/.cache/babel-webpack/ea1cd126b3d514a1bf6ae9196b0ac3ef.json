{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"/Users/alessioricci/projects/udemy/udemy-app/node_modules/@babel/runtime/helpers/asyncToGenerator\").default;\n\nvar MulterModule_1;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MulterModule = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst common_1 = require(\"@nestjs/common\");\n\nconst random_string_generator_util_1 = require(\"@nestjs/common/utils/random-string-generator.util\");\n\nconst files_constants_1 = require(\"./files.constants\");\n\nconst multer_constants_1 = require(\"./multer.constants\");\n\nlet MulterModule = MulterModule_1 = class MulterModule {\n  static register(options = {}) {\n    return {\n      module: MulterModule_1,\n      providers: [{\n        provide: files_constants_1.MULTER_MODULE_OPTIONS,\n        useValue: options\n      }, {\n        provide: multer_constants_1.MULTER_MODULE_ID,\n        useValue: random_string_generator_util_1.randomStringGenerator()\n      }],\n      exports: [files_constants_1.MULTER_MODULE_OPTIONS]\n    };\n  }\n\n  static registerAsync(options) {\n    return {\n      module: MulterModule_1,\n      imports: options.imports,\n      providers: [...this.createAsyncProviders(options), {\n        provide: multer_constants_1.MULTER_MODULE_ID,\n        useValue: random_string_generator_util_1.randomStringGenerator()\n      }],\n      exports: [files_constants_1.MULTER_MODULE_OPTIONS]\n    };\n  }\n\n  static createAsyncProviders(options) {\n    if (options.useExisting || options.useFactory) {\n      return [this.createAsyncOptionsProvider(options)];\n    }\n\n    return [this.createAsyncOptionsProvider(options), {\n      provide: options.useClass,\n      useClass: options.useClass\n    }];\n  }\n\n  static createAsyncOptionsProvider(options) {\n    if (options.useFactory) {\n      return {\n        provide: files_constants_1.MULTER_MODULE_OPTIONS,\n        useFactory: options.useFactory,\n        inject: options.inject || []\n      };\n    }\n\n    return {\n      provide: files_constants_1.MULTER_MODULE_OPTIONS,\n      useFactory: function () {\n        var _ref = _asyncToGenerator(function* (optionsFactory) {\n          return optionsFactory.createMulterOptions();\n        });\n\n        return function useFactory(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      inject: [options.useExisting || options.useClass]\n    };\n  }\n\n};\nMulterModule = MulterModule_1 = tslib_1.__decorate([common_1.Module({})], MulterModule);\nexports.MulterModule = MulterModule;","map":null,"metadata":{},"sourceType":"script"}