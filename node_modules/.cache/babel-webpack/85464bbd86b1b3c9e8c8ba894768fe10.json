{"ast":null,"code":"\"use strict\";\n\nfunction __export(m) {\n  for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar MetadataStorage_1 = require(\"./metadata/MetadataStorage\");\n\nvar Validator_1 = require(\"./validation/Validator\");\n\nvar container_1 = require(\"./container\"); // -------------------------------------------------------------------------\n// Export everything api users needs\n// -------------------------------------------------------------------------\n\n\n__export(require(\"./container\"));\n\n__export(require(\"./decorator/decorators\"));\n\n__export(require(\"./validation/ValidationError\"));\n\n__export(require(\"./validation/ValidationTypes\"));\n\n__export(require(\"./validation/Validator\"));\n\n__export(require(\"./register-decorator\"));\n\n__export(require(\"./metadata/MetadataStorage\"));\n/**\n * Validates given object by object's decorators or given validation schema.\n */\n\n\nfunction validate(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {\n  if (typeof schemaNameOrObject === \"string\") {\n    return container_1.getFromContainer(Validator_1.Validator).validate(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);\n  } else {\n    return container_1.getFromContainer(Validator_1.Validator).validate(schemaNameOrObject, objectOrValidationOptions);\n  }\n}\n\nexports.validate = validate;\n/**\n * Validates given object by object's decorators or given validation schema and reject on error.\n */\n\nfunction validateOrReject(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {\n  if (typeof schemaNameOrObject === \"string\") {\n    return container_1.getFromContainer(Validator_1.Validator).validateOrReject(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);\n  } else {\n    return container_1.getFromContainer(Validator_1.Validator).validateOrReject(schemaNameOrObject, objectOrValidationOptions);\n  }\n}\n\nexports.validateOrReject = validateOrReject;\n/**\n * Validates given object by object's decorators or given validation schema.\n * Note that this method completely ignores async validations.\n * If you want to properly perform validation you need to call validate method instead.\n */\n\nfunction validateSync(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions) {\n  if (typeof schemaNameOrObject === \"string\") {\n    return container_1.getFromContainer(Validator_1.Validator).validateSync(schemaNameOrObject, objectOrValidationOptions, maybeValidatorOptions);\n  } else {\n    return container_1.getFromContainer(Validator_1.Validator).validateSync(schemaNameOrObject, objectOrValidationOptions);\n  }\n}\n\nexports.validateSync = validateSync;\n/**\n * Registers a new validation schema.\n */\n\nfunction registerSchema(schema) {\n  container_1.getFromContainer(MetadataStorage_1.MetadataStorage).addValidationSchema(schema);\n}\n\nexports.registerSchema = registerSchema; //# sourceMappingURL=index.js.map","map":null,"metadata":{},"sourceType":"script"}